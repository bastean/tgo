// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package home

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var ReadFormTagId = "read"

func ReadFormInit(formTagId string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_ReadFormInit_045e`,
		Function: `function __templ_ReadFormInit_045e(formTagId){$(` + "`" + `#${formTagId}` + "`" + `)
        .form({
            on: "blur",
            inline: true,
            preventLeaving: true,
            keyboardShortcuts: false,
            fields: {
                Username: {
                    rules: [
                        {
                            type: "size[2..20]"
                        },
                        {
                            type: "regExp[/^[A-Za-z0-9]+$/]",
                            prompt: "{name} must be alphanumeric only"
                        },
                        {
                            type: "regExp[/^.*[^0-9].*$/]",
                            prompt: "{name} cannot be only numbers"
                        }
                    ]
                }
            }
        })
        .api({
            action: "user_read", 
            method: "POST",
            onSuccess: function(response, element, xhr) {
                $.toast({
                    class: "info",
                    displayTime: 0,
                    closeIcon: true,
                    title: response.Message,
                    message: ` + "`" + `
                    <div class="ui divider"></div>
                    <div class="ui animated bulleted list">
                        <div class="item">
                            <b>Username:</b> ${response.Data.Username}
                        </div>
                        <div class="item">
                            <b>Portfolio</b>
                            <div class="list">
                                <div class="item">
                                    <b>Currency:</b> ${response.Data.Portfolio.Currency}
                                </div>
                                <div class="item">
                                    <b>Coins:</b> ${response.Data.Portfolio.Coins}
                                </div>
                            </div>
                        </div>
                    </div>
                    ` + "`" + `
                });

                _.delay(function() {
                    $(` + "`" + `#${formTagId}` + "`" + `).form("reset");
                }, 1000);
            },
            onFailure: function(response, element, xhr) {
                $.toast({
                    class: "error",
                    message: response.Message,
                    showProgress: "top"
                });
            }
        })
    ;
}`,
		Call:       templ.SafeScript(`__templ_ReadFormInit_045e`, formTagId),
		CallInline: templ.SafeScriptInline(`__templ_ReadFormInit_045e`, formTagId),
	}
}

func ReadForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(ReadFormTagId)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/app/server/component/page/home/form.read.templ`, Line: 76, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"ui inverted form\"><div class=\"required field\"><label>Username</label><div class=\"ui inverted transparent left icon input\"><i class=\"user icon\"></i> <input type=\"text\" placeholder=\"Username\" name=\"Username\"></div></div><div class=\"ui divider\"></div><div class=\"ui middle aligned center aligned grid\"><div class=\"column\"><button class=\"ui vertical animated fluid primary submit button\"><div class=\"hidden content\"><i class=\"search icon\"></i></div><div class=\"visible content\">Read</div></button></div></div></form>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ReadFormInit(ReadFormTagId).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
